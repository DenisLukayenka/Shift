// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shift.Repository.Database;

namespace Shift.Repository.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shift.DAL.Models.University.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Head")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.Protocol", b =>
                {
                    b.Property<int>("ProtocolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ProtocolId");

                    b.ToTable("Protocol");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.UniversitySettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScientificTrainingHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViceRector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UniversitySettings");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.EmployeeData.AcademicDegree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.EmployeeData.AcademicRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicRanks");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.EmployeeData.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademicDegreeId")
                        .HasColumnType("int");

                    b.Property<int?>("AcademicRankId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("JobPositionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("AcademicRankId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.EmployeeData.JobPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobPositions");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.Graduate", b =>
                {
                    b.Property<int>("GraduateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EducationForm")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishEducationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScienceAdviserId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartEducationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GraduateId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ScienceAdviserId");

                    b.HasIndex("SpecialtyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Graduates");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.GraduateJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GraduateId")
                        .HasColumnType("int");

                    b.Property<int?>("UniversitySettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GraduateId");

                    b.HasIndex("UniversitySettingsId");

                    b.ToTable("GraduateJournals");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdviserApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttestationResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DepartmentHeadApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationPhaseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdviserApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepartmentHeadApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainingHeadApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrainingHeadApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingtHead")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EducationPhaseId");

                    b.HasIndex("ProtocolId");

                    b.ToTable("Attestations");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.CalendarStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EducationPhaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OutcomeResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaitResult")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EducationPhaseId");

                    b.ToTable("CalendarStages");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.EducationPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdviserApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdviserApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<int?>("JournalId")
                        .HasColumnType("int");

                    b.Property<string>("Publications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScienceParticipations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubResearchResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripsInternships")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.ToTable("EducationPhases");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.RationalInfo", b =>
                {
                    b.Property<int>("RationalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdviserApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DepartmentHeadApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DissertationTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GraduateJournalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdviserApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepartmentHeadApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainingHeadApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProtocolId")
                        .HasColumnType("int");

                    b.Property<string>("ReseachParticipation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudySubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisPublications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrainingHeadApproveDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RationalInfoId");

                    b.HasIndex("GraduateJournalId")
                        .IsUnique()
                        .HasFilter("[GraduateJournalId] IS NOT NULL");

                    b.HasIndex("ProtocolId");

                    b.ToTable("RationalInfo");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.ScienceActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EducationPhaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EducationPhaseId");

                    b.ToTable("ScienceActivities");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.ThesisPlan", b =>
                {
                    b.Property<int>("ThesisPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdviserApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GraduateJournalId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ThesisPlanId");

                    b.HasIndex("GraduateJournalId")
                        .IsUnique()
                        .HasFilter("[GraduateJournalId] IS NOT NULL");

                    b.ToTable("ThesisPlans");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.WorkPlan", b =>
                {
                    b.Property<int>("WorkPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdviserApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CouncilNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalCertification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GraduateJournalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdviserApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainingHeadApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrainingHeadApproveDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkPlanId");

                    b.HasIndex("GraduateJournalId");

                    b.ToTable("WorkPlans");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.WorkStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<string>("JobInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlanId");

                    b.ToTable("WorkStages");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.PreparationInfo", b =>
                {
                    b.Property<int>("PreparationInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Additions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPreparationApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreparationSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReseachSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResearchApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Objectives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparationAdviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PreparationApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreparationSubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Relevance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchAdviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UndergraduateJournalId")
                        .HasColumnType("int");

                    b.HasKey("PreparationInfoId");

                    b.HasIndex("UndergraduateJournalId")
                        .IsUnique()
                        .HasFilter("[UndergraduateJournalId] IS NOT NULL");

                    b.ToTable("PreparationInfo");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProtocolId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UndergraduateJournalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProtocolId");

                    b.HasIndex("UndergraduateJournalId");

                    b.ToTable("ReportResults");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.ResearchWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreparationInfoId")
                        .HasColumnType("int");

                    b.Property<string>("PresentationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PreparationInfoId");

                    b.ToTable("ResearchWorks");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.ThesisCertification", b =>
                {
                    b.Property<int>("ThesisCertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int?>("UndergraduateJournalId")
                        .HasColumnType("int");

                    b.HasKey("ThesisCertificationId");

                    b.HasIndex("UndergraduateJournalId")
                        .IsUnique()
                        .HasFilter("[UndergraduateJournalId] IS NOT NULL");

                    b.ToTable("ThesisCertifications");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.Undergraduate", b =>
                {
                    b.Property<int>("UndergraduateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EducationForm")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishEducationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScienceAdviserId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartEducationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UndergraduateId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ScienceAdviserId");

                    b.HasIndex("SpecialtyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Undergraduates");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.UndergraduateJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UndergraduateId")
                        .HasColumnType("int");

                    b.Property<int?>("UniversitySettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UndergraduateId");

                    b.HasIndex("UniversitySettingsId");

                    b.ToTable("UndergraduateJournal");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.ExamInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("GraduateId")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GraduateId");

                    b.ToTable("ExamInfo");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.LoginInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HashPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginInfo");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatronymicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.Department", b =>
                {
                    b.HasOne("Shift.DAL.Models.University.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Shift.DAL.Models.University.Specialty", b =>
                {
                    b.HasOne("Shift.DAL.Models.University.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.EmployeeData.Employee", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.EmployeeData.AcademicDegree", "AcademicDegree")
                        .WithMany("Employees")
                        .HasForeignKey("AcademicDegreeId");

                    b.HasOne("Shift.DAL.Models.UserModels.EmployeeData.AcademicRank", "AcademicRank")
                        .WithMany("Employees")
                        .HasForeignKey("AcademicRankId");

                    b.HasOne("Shift.DAL.Models.University.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Shift.DAL.Models.UserModels.EmployeeData.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId");

                    b.HasOne("Shift.DAL.Models.UserModels.UserData.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Shift.DAL.Models.UserModels.EmployeeData.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.Graduate", b =>
                {
                    b.HasOne("Shift.DAL.Models.University.Department", null)
                        .WithMany("Graduates")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Shift.DAL.Models.UserModels.EmployeeData.Employee", "ScienceAdviser")
                        .WithMany("Graduates")
                        .HasForeignKey("ScienceAdviserId");

                    b.HasOne("Shift.DAL.Models.University.Specialty", "Specialty")
                        .WithMany("Graduates")
                        .HasForeignKey("SpecialtyId");

                    b.HasOne("Shift.DAL.Models.UserModels.UserData.User", "User")
                        .WithOne("Graduate")
                        .HasForeignKey("Shift.DAL.Models.UserModels.GraduateData.Graduate", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.GraduateJournal", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.Graduate", "Graduate")
                        .WithMany("GraduateJournals")
                        .HasForeignKey("GraduateId");

                    b.HasOne("Shift.DAL.Models.University.UniversitySettings", "UniversitySettings")
                        .WithMany()
                        .HasForeignKey("UniversitySettingsId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.Attestation", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.JournalData.EducationPhase", "EducationPhase")
                        .WithMany("Attestations")
                        .HasForeignKey("EducationPhaseId");

                    b.HasOne("Shift.DAL.Models.University.Protocol", "Protocol")
                        .WithMany()
                        .HasForeignKey("ProtocolId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.CalendarStage", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.JournalData.EducationPhase", "EducationPhase")
                        .WithMany("CalendarStages")
                        .HasForeignKey("EducationPhaseId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.EducationPhase", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.GraduateJournal", "Journal")
                        .WithMany("EducationYears")
                        .HasForeignKey("JournalId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.RationalInfo", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.GraduateJournal", "GraduateJournal")
                        .WithOne("RationalInfo")
                        .HasForeignKey("Shift.DAL.Models.UserModels.GraduateData.JournalData.RationalInfo", "GraduateJournalId");

                    b.HasOne("Shift.DAL.Models.University.Protocol", "Protocol")
                        .WithMany()
                        .HasForeignKey("ProtocolId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.ScienceActivity", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.JournalData.EducationPhase", "EducationPhase")
                        .WithMany("ScienceActivities")
                        .HasForeignKey("EducationPhaseId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.ThesisPlan", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.GraduateJournal", "GraduateJournal")
                        .WithOne("ThesisPlan")
                        .HasForeignKey("Shift.DAL.Models.UserModels.GraduateData.JournalData.ThesisPlan", "GraduateJournalId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.WorkPlan", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.GraduateJournal", "GraduateJournal")
                        .WithMany("WorkPlans")
                        .HasForeignKey("GraduateJournalId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.GraduateData.JournalData.WorkStage", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.JournalData.WorkPlan", "WorkPlan")
                        .WithMany("WorkStages")
                        .HasForeignKey("WorkPlanId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.PreparationInfo", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.UndergraduateData.UndergraduateJournal", "UndergraduateJournal")
                        .WithOne("PreparationInfo")
                        .HasForeignKey("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.PreparationInfo", "UndergraduateJournalId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.Report", b =>
                {
                    b.HasOne("Shift.DAL.Models.University.Protocol", "Protocol")
                        .WithMany()
                        .HasForeignKey("ProtocolId");

                    b.HasOne("Shift.DAL.Models.UserModels.UndergraduateData.UndergraduateJournal", "UndergraduateJournal")
                        .WithMany("ReportResults")
                        .HasForeignKey("UndergraduateJournalId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.ResearchWork", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.PreparationInfo", "PreparationInfo")
                        .WithMany("ResearchWorks")
                        .HasForeignKey("PreparationInfoId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.ThesisCertification", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.UndergraduateData.UndergraduateJournal", "UndergraduateJournal")
                        .WithOne("ThesisCertification")
                        .HasForeignKey("Shift.DAL.Models.UserModels.UndergraduateData.JournalData.ThesisCertification", "UndergraduateJournalId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.Undergraduate", b =>
                {
                    b.HasOne("Shift.DAL.Models.University.Department", null)
                        .WithMany("Undergraduates")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Shift.DAL.Models.UserModels.EmployeeData.Employee", "ScienceAdviser")
                        .WithMany("Undergraduates")
                        .HasForeignKey("ScienceAdviserId");

                    b.HasOne("Shift.DAL.Models.University.Specialty", "Specialty")
                        .WithMany("Undergraduates")
                        .HasForeignKey("SpecialtyId");

                    b.HasOne("Shift.DAL.Models.UserModels.UserData.User", "User")
                        .WithOne("Undergraduate")
                        .HasForeignKey("Shift.DAL.Models.UserModels.UndergraduateData.Undergraduate", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UndergraduateData.UndergraduateJournal", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.UndergraduateData.Undergraduate", "Undergraduate")
                        .WithMany("Journals")
                        .HasForeignKey("UndergraduateId");

                    b.HasOne("Shift.DAL.Models.University.UniversitySettings", "Settings")
                        .WithMany()
                        .HasForeignKey("UniversitySettingsId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.ExamInfo", b =>
                {
                    b.HasOne("Shift.DAL.Models.University.Discipline", "Discipline")
                        .WithMany("ExamInfo")
                        .HasForeignKey("DisciplineId");

                    b.HasOne("Shift.DAL.Models.UserModels.GraduateData.Graduate", "Graduate")
                        .WithMany("ExamsData")
                        .HasForeignKey("GraduateId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.LoginInfo", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.UserData.User", "User")
                        .WithMany("LoginData")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Shift.DAL.Models.UserModels.UserData.User", b =>
                {
                    b.HasOne("Shift.DAL.Models.UserModels.UserData.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
